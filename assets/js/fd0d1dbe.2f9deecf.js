"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[646],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>u});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},f="mdxType",b={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=l(t),d=o,u=f["".concat(p,".").concat(d)]||f[d]||b[d]||i;return t?n.createElement(u,a(a({ref:r},c),{},{components:t})):n.createElement(u,a({ref:r},c))}));function u(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[f]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8691:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>a,default:()=>b,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const i={id:"betterer.bettereroptionsoverride.filters",title:"BettererOptionsOverride.filters",sidebar_label:"BettererOptionsOverride.filters",slug:"/betterer.bettereroptionsoverride.filters"},a=void 0,s={unversionedId:"api/betterer.bettereroptionsoverride.filters",id:"api/betterer.bettereroptionsoverride.filters",title:"BettererOptionsOverride.filters",description:"API &gt; @betterer/betterer &gt; BettererOptionsOverride &gt; filters",source:"@site/docs/api/betterer.bettereroptionsoverride.filters.md",sourceDirName:"api",slug:"/betterer.bettereroptionsoverride.filters",permalink:"/betterer/docs/betterer.bettereroptionsoverride.filters",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.bettereroptionsoverride.filters.md",tags:[],version:"current",frontMatter:{id:"betterer.bettereroptionsoverride.filters",title:"BettererOptionsOverride.filters",sidebar_label:"BettererOptionsOverride.filters",slug:"/betterer.bettereroptionsoverride.filters"}},p={},l=[{value:"Signature",id:"signature",level:2}],c={toc:l},f="wrapper";function b(e){let{components:r,...t}=e;return(0,o.kt)(f,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettereroptionsoverride"},"BettererOptionsOverride")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettereroptionsoverride.filters"},"filters")),(0,o.kt)("p",null,"A string or ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"},"Regular Expression")," to match the names of tests that should be run, or an array of them. Will be converted into ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererconfigfilters"},(0,o.kt)("inlineCode",{parentName:"a"},"BettererConfigFilters")),"."),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"filters?: BettererOptionsFilters;\n")))}b.isMDXComponent=!0}}]);