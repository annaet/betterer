"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3154],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},b="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=c(r),d=a,m=b["".concat(p,".").concat(d)]||b[d]||u[d]||o;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[b]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8863:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"betterer.betterercontext",title:"BettererContext",sidebar_label:"BettererContext",slug:"/betterer.betterercontext"},i=void 0,l={unversionedId:"api/betterer.betterercontext",id:"api/betterer.betterercontext",title:"BettererContext",description:"API &gt; @betterer/betterer &gt; BettererContext",source:"@site/docs/api/betterer.betterercontext.md",sourceDirName:"api",slug:"/betterer.betterercontext",permalink:"/betterer/docs/betterer.betterercontext",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.betterercontext.md",tags:[],version:"current",frontMatter:{id:"betterer.betterercontext",title:"BettererContext",sidebar_label:"BettererContext",slug:"/betterer.betterercontext"}},p={},c=[{value:"Signature",id:"signature",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2}],s={toc:c},b="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(b,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterercontext"},"BettererContext")),(0,a.kt)("p",null,"The context of a set of test suite runs."),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface BettererContext \n")),(0,a.kt)("h2",{id:"remarks"},"Remarks"),(0,a.kt)("p",null,"The internal implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"BettererContext")," is responsible for a lot more than this interface suggests, but we want to minimise the public API surface as much as possible. You can get the ",(0,a.kt)("inlineCode",{parentName:"p"},"BettererContext")," via the ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererreporter"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererReporter"))," interface."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const myReporter: BettererReporter = {\n  // Access the context before any tests are run:\n  contextStart (context: BettererContext) {\n    // ...\n  },\n  // Access the context when something goes wrong:\n  contextError (context: BettererContext) {\n    // ...\n  }\n}\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterercontext.config"},"config")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererconfig"},"BettererConfig")),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererconfig"},(0,a.kt)("inlineCode",{parentName:"a"},"config"))," of the context. You probably don't want to mess with this directly \ud83d\udd25. If you need to update the config, you should use ",(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterercontext.options"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererContext.options()"))," instead.")))),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterercontext.options"},"options(optionsOverride)")),(0,a.kt)("td",{parentName:"tr",align:null},"Make changes to the context config. The updated config will be used for the next run.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterercontext.stop"},"stop()")),(0,a.kt)("td",{parentName:"tr",align:null},"Stop the test run and clean everything up. If tests are running, waits for them to end before stopping.")))))}u.isMDXComponent=!0}}]);