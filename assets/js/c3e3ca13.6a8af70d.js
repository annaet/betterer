"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6072],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(r),f=a,m=u["".concat(p,".").concat(f)]||u[f]||h[f]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1898:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={id:"caching",title:"Caching",slug:"/cache"},o=void 0,c={unversionedId:"caching",id:"caching",title:"Caching",description:"Betterer has built-in cache functionality for BettererFileTests. You can enable it by running Betterer with the --cache option. Betterer will save a cache file at .betterer-cache (or whatever path you specify with the --cachePath option).",source:"@site/docs/caching.md",sourceDirName:".",slug:"/cache",permalink:"/betterer/docs/cache",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/caching.md",tags:[],version:"current",lastUpdatedBy:"Craig Spence",lastUpdatedAt:1636753986,formattedLastUpdatedAt:"Nov 12, 2021",frontMatter:{id:"caching",title:"Caching",slug:"/cache"},sidebar:"docs",previous:{title:"Betterer & TypeScript",permalink:"/betterer/docs/betterer-and-typescript"},next:{title:"Reporters",permalink:"/betterer/docs/reporters"}},p={},s=[],l={toc:s},u="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Betterer")," has built-in cache functionality for ",(0,a.kt)("a",{parentName:"p",href:"./betterer.bettererfiletest"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererFileTest"),"s"),". You can enable it by running ",(0,a.kt)("strong",{parentName:"p"},"Betterer")," with the ",(0,a.kt)("a",{parentName:"p",href:"./running-betterer#start-options"},(0,a.kt)("inlineCode",{parentName:"a"},"--cache"))," option. ",(0,a.kt)("strong",{parentName:"p"},"Betterer")," will save a cache file at ",(0,a.kt)("inlineCode",{parentName:"p"},".betterer-cache")," (or whatever path you specify with the ",(0,a.kt)("a",{parentName:"p",href:"./running-betterer#start-options"},(0,a.kt)("inlineCode",{parentName:"a"},"--cachePath"))," option)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Betterer")," will use the cache to avoid checking any files that haven't changed since the previous run. This means ",(0,a.kt)("strong",{parentName:"p"},"Betterer")," can run much faster if a test is using the ",(0,a.kt)("inlineCode",{parentName:"p"},"filePaths")," parameter of ",(0,a.kt)("a",{parentName:"p",href:"./betterer.bettererfiletestfunction"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererFileTestFunction")),"."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Caching is still experimental. Please try it out and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/phenomnomnominal/betterer/issues"},"create issues on Github")," if anything is weird. If something is broken, you can just delete the ",(0,a.kt)("inlineCode",{parentName:"p"},".betterer.cache")," file to reset the cache.")))}h.isMDXComponent=!0}}]);