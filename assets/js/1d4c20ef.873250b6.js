"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2548],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},b="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),b=l(r),m=i,d=b["".concat(p,".").concat(m)]||b[m]||u[m]||s;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[b]="string"==typeof e?e:i,o[1]=a;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6471:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const s={id:"betterer.betterertestoptionscomplex.serialiser",title:"BettererTestOptionsComplex.serialiser",sidebar_label:"BettererTestOptionsComplex.serialiser",slug:"/betterer.betterertestoptionscomplex.serialiser"},o=void 0,a={unversionedId:"api/betterer.betterertestoptionscomplex.serialiser",id:"api/betterer.betterertestoptionscomplex.serialiser",title:"BettererTestOptionsComplex.serialiser",description:"API &gt; @betterer/betterer &gt; BettererTestOptionsComplex &gt; serialiser",source:"@site/docs/api/betterer.betterertestoptionscomplex.serialiser.md",sourceDirName:"api",slug:"/betterer.betterertestoptionscomplex.serialiser",permalink:"/betterer/docs/betterer.betterertestoptionscomplex.serialiser",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.betterertestoptionscomplex.serialiser.md",tags:[],version:"current",frontMatter:{id:"betterer.betterertestoptionscomplex.serialiser",title:"BettererTestOptionsComplex.serialiser",sidebar_label:"BettererTestOptionsComplex.serialiser",slug:"/betterer.betterertestoptionscomplex.serialiser"}},p={},l=[{value:"Signature",id:"signature",level:2}],c={toc:l},b="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(b,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertestoptionscomplex"},"BettererTestOptionsComplex")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertestoptionscomplex.serialiser"},"serialiser")),(0,i.kt)("p",null,"The functions that serialises and deserialises a test result between the ",(0,i.kt)("a",{parentName:"p",href:"#deserialisedtype-default-unknown"},(0,i.kt)("inlineCode",{parentName:"a"},"DeserialisedType"))," and ",(0,i.kt)("a",{parentName:"p",href:"#serialisedtype-default-deserialisedtype"},(0,i.kt)("inlineCode",{parentName:"a"},"SerialisedType")),"."),(0,i.kt)("h2",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"serialiser: BettererSerialiser<DeserialisedType, SerialisedType>;\n")))}u.isMDXComponent=!0}}]);