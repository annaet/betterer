"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6191],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=n.createContext({}),s=function(e){var t=n.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(b.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,b=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(r),f=a,d=u["".concat(b,".").concat(f)]||u[f]||c[f]||i;return r?n.createElement(d,l(l({ref:t},p),{},{components:r})):n.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7466:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={id:"betterer.bettererrun.baseline",title:"BettererRun.baseline",sidebar_label:"BettererRun.baseline",slug:"/betterer.bettererrun.baseline"},l=void 0,o={unversionedId:"api/betterer.bettererrun.baseline",id:"api/betterer.bettererrun.baseline",title:"BettererRun.baseline",description:"API &gt; @betterer/betterer &gt; BettererRun &gt; baseline",source:"@site/docs/api/betterer.bettererrun.baseline.md",sourceDirName:"api",slug:"/betterer.bettererrun.baseline",permalink:"/betterer/docs/betterer.bettererrun.baseline",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.bettererrun.baseline.md",tags:[],version:"current",frontMatter:{id:"betterer.bettererrun.baseline",title:"BettererRun.baseline",sidebar_label:"BettererRun.baseline",slug:"/betterer.bettererrun.baseline"}},b={},s=[{value:"Signature",id:"signature",level:2}],p={toc:s},u="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererrun"},"BettererRun")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererrun.baseline"},"baseline")),(0,a.kt)("p",null,"The baseline result for the test run. If the ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertest"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererTest"))," gets better over the lifetime of the ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterercontext"},"BettererContext"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"baseline")," will always reflect the original result. Will be ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," when ",(0,a.kt)("inlineCode",{parentName:"p"},"isNew")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"readonly baseline: BettererResult | null;\n")))}c.isMDXComponent=!0}}]);