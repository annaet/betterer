"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6970],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=c(r),b=o,g=u["".concat(p,".").concat(b)]||u[b]||f[b]||s;return r?n.createElement(g,i(i({ref:t},l),{},{components:r})):n.createElement(g,i({ref:t},l))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=b;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[u]="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},9185:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={id:"betterer.bettereroptionsresults.configpaths",title:"BettererOptionsResults.configPaths",sidebar_label:"BettererOptionsResults.configPaths",slug:"/betterer.bettereroptionsresults.configpaths"},i=void 0,a={unversionedId:"api/betterer.bettereroptionsresults.configpaths",id:"api/betterer.bettereroptionsresults.configpaths",title:"BettererOptionsResults.configPaths",description:"API &gt; @betterer/betterer &gt; BettererOptionsResults &gt; configPaths",source:"@site/docs/api/betterer.bettereroptionsresults.configpaths.md",sourceDirName:"api",slug:"/betterer.bettereroptionsresults.configpaths",permalink:"/betterer/docs/betterer.bettereroptionsresults.configpaths",draft:!1,editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.bettereroptionsresults.configpaths.md",tags:[],version:"current",frontMatter:{id:"betterer.bettereroptionsresults.configpaths",title:"BettererOptionsResults.configPaths",sidebar_label:"BettererOptionsResults.configPaths",slug:"/betterer.bettereroptionsresults.configpaths"}},p={},c=[{value:"Signature",id:"signature",level:2}],l={toc:c},u="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettereroptionsresults"},"BettererOptionsResults")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettereroptionsresults.configpaths"},"configPaths")),(0,o.kt)("p",null,"A path to a ",(0,o.kt)("a",{parentName:"p",href:"https://phenomnomnominal.github.io/betterer/docs/test-definition-file"},"test definition file")," containing ",(0,o.kt)("strong",{parentName:"p"},"Betterer")," tests, or an array of them. All ",(0,o.kt)("inlineCode",{parentName:"p"},"configPaths")," should be relative to the ",(0,o.kt)("inlineCode",{parentName:"p"},"cwd"),"."),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"configPaths?: BettererOptionsPaths;\n")))}f.isMDXComponent=!0}}]);